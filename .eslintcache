[{"/workspace/e-commerce-app/src/index.js":"1","/workspace/e-commerce-app/src/App.js":"2","/workspace/e-commerce-app/src/lib/commerce.js":"3","/workspace/e-commerce-app/src/components/index.js":"4","/workspace/e-commerce-app/src/components/Products/Product/Product.jsx":"5","/workspace/e-commerce-app/src/components/Cart/CartItem/styles.js":"6","/workspace/e-commerce-app/src/components/Cart/Cart.jsx":"7","/workspace/e-commerce-app/src/components/CheckoutForm/AddressForm.jsx":"8","/workspace/e-commerce-app/src/components/Navbar/Navbar.jsx":"9","/workspace/e-commerce-app/src/components/CheckoutForm/Checkout/Checkout.jsx":"10","/workspace/e-commerce-app/src/components/Products/Product/styles.js":"11","/workspace/e-commerce-app/src/components/Cart/CartItem/CartItem.jsx":"12","/workspace/e-commerce-app/src/components/CheckoutForm/PaymentForm.jsx":"13","/workspace/e-commerce-app/src/components/Navbar/styles.js":"14","/workspace/e-commerce-app/src/components/Products/styles.js":"15","/workspace/e-commerce-app/src/components/CheckoutForm/Checkout/styles.js":"16","/workspace/e-commerce-app/src/components/Cart/styles.js":"17","/workspace/e-commerce-app/src/components/CheckoutForm/CustomTextField.jsx":"18"},{"size":146,"mtime":1612366852000,"results":"19","hashOfConfig":"20"},{"size":2534,"mtime":1612944341596,"results":"21","hashOfConfig":"20"},{"size":125,"mtime":1612870995875,"results":"22","hashOfConfig":"20"},{"size":230,"mtime":1612368943000,"results":"23","hashOfConfig":"20"},{"size":1398,"mtime":1612944534000,"results":"24","hashOfConfig":"20"},{"size":332,"mtime":1612370178000,"results":"25","hashOfConfig":"20"},{"size":1971,"mtime":1612944793903,"results":"26","hashOfConfig":"20"},{"size":4677,"mtime":1612857992000,"results":"27","hashOfConfig":"20"},{"size":1399,"mtime":1612881777025,"results":"28","hashOfConfig":"20"},{"size":2450,"mtime":1612939468532,"results":"29","hashOfConfig":"20"},{"size":395,"mtime":1612439693000,"results":"30","hashOfConfig":"20"},{"size":1520,"mtime":1612370809000,"results":"31","hashOfConfig":"20"},{"size":231,"mtime":1612939441000,"results":"32","hashOfConfig":"20"},{"size":1564,"mtime":1612370869000,"results":"33","hashOfConfig":"20"},{"size":287,"mtime":1612371421000,"results":"34","hashOfConfig":"20"},{"size":1158,"mtime":1612442389000,"results":"35","hashOfConfig":"20"},{"size":569,"mtime":1612369089000,"results":"36","hashOfConfig":"20"},{"size":623,"mtime":1612939307000,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"3narcr",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/e-commerce-app/src/index.js",[],["79","80"],"/workspace/e-commerce-app/src/App.js",["81"],"/workspace/e-commerce-app/src/lib/commerce.js",[],["82","83"],"/workspace/e-commerce-app/src/components/index.js",[],"/workspace/e-commerce-app/src/components/Products/Product/Product.jsx",[],"/workspace/e-commerce-app/src/components/Cart/CartItem/styles.js",[],["84","85"],"/workspace/e-commerce-app/src/components/Cart/Cart.jsx",[],"/workspace/e-commerce-app/src/components/CheckoutForm/AddressForm.jsx",["86","87","88"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\n\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({ checkoutToken, test }) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n    const methods = useForm();\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    };\n\n    const fetchSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n    };\n\n    const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\n\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n    };\n    \n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id);\n    }, [])\n\n    useEffect(() => {\n        if (shippingCountry) fetchSubdivisions(shippingCountry); \n    }, [shippingCountry]);\n\n    useEffect(() => {\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n    }, [shippingSubdivision]);\n\n    return (\n        <>\n          <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\n          <FormProvider {...methods}>\n              <form>\n                  <Grid container spacing={3}>\n                    <FormInput required name=\"firstName\" label=\"First name\" />\n                    <FormInput required name=\"lastName\" label=\"Last name\" />\n                    <FormInput required name=\"address1\" label=\"Address Line 1\" />\n                    <FormInput required name=\"email\" label=\"Email\" />\n                    <FormInput required name=\"city\" label=\"City\" />\n                    <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n                    <Grid item xs={12} sm={6}>\n                        <InputLabel>Shipping Country</InputLabel>\n                        <Select value={shippingCountry} fullWidth onchange={(e) => setShippingCountry(e.target.value)}>\n                            {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name})).map((item) => (\n                                <MenuItem key={item.id} value={item.id}>\n                                    {item.label}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <InputLabel>Shipping Subdivision</InputLabel>\n                        <Select value={shippingSubdivision} fullWidth onchange={(e) => setShippingSubdivision(e.target.value)}>\n                            {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name})).map((item) => (\n                                <MenuItem key={item.id} value={item.id}>\n                                    {item.label}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <InputLabel>Shipping Options</InputLabel>\n                        <Select value={shippingOption} fullWidth onchange={(e) => setShippingOption(e.target.value)}>\n                            {shippingOptions.map((s0) => ({ id: s0.id, label: `{s0.description} - (${s0.price.formatted_with_symbol}`})).map((item) => (\n                                <MenuItem key={item.id} value={item.id}>\n                                    {item.label}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </Grid>\n                  </Grid>\n              </form>\n          </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm;\n","/workspace/e-commerce-app/src/components/Navbar/Navbar.jsx",["89","90"],"/workspace/e-commerce-app/src/components/CheckoutForm/Checkout/Checkout.jsx",["91","92","93","94","95"],"/workspace/e-commerce-app/src/components/Products/Product/styles.js",[],"/workspace/e-commerce-app/src/components/Cart/CartItem/CartItem.jsx",[],"/workspace/e-commerce-app/src/components/CheckoutForm/PaymentForm.jsx",["96","97","98"],"import React from 'react';\nimport { Typography, Button, Divider } from '@material-ui/core';\n\nconst PaymentForm = ({ checkoutToken, onCaptureCheckout }) => {\n    return (\n        <>\n\n        </>\n    )\n}\n\nexport default PaymentForm;\n","/workspace/e-commerce-app/src/components/Navbar/styles.js",[],"/workspace/e-commerce-app/src/components/Products/styles.js",[],"/workspace/e-commerce-app/src/components/CheckoutForm/Checkout/styles.js",[],"/workspace/e-commerce-app/src/components/Cart/styles.js",[],"/workspace/e-commerce-app/src/components/CheckoutForm/CustomTextField.jsx",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":11,"column":12,"nodeType":"105","messageId":"106","endLine":11,"endColumn":17},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"99","replacedBy":"109"},{"ruleId":"101","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":2,"column":40,"nodeType":"105","messageId":"106","endLine":2,"endColumn":46},{"ruleId":"112","severity":1,"message":"113","line":40,"column":8,"nodeType":"114","endLine":40,"endColumn":10,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":48,"column":8,"nodeType":"114","endLine":48,"endColumn":29,"suggestions":"117"},{"ruleId":"103","severity":1,"message":"118","line":2,"column":46,"nodeType":"105","messageId":"106","endLine":2,"endColumn":54},{"ruleId":"103","severity":1,"message":"119","line":2,"column":56,"nodeType":"105","messageId":"106","endLine":2,"endColumn":60},{"ruleId":"103","severity":1,"message":"120","line":2,"column":55,"nodeType":"105","messageId":"106","endLine":2,"endColumn":71},{"ruleId":"103","severity":1,"message":"121","line":2,"column":73,"nodeType":"105","messageId":"106","endLine":2,"endColumn":80},{"ruleId":"103","severity":1,"message":"122","line":14,"column":24,"nodeType":"105","messageId":"106","endLine":14,"endColumn":37},{"ruleId":"112","severity":1,"message":"123","line":33,"column":8,"nodeType":"114","endLine":33,"endColumn":14,"suggestions":"124"},{"ruleId":"103","severity":1,"message":"125","line":35,"column":11,"nodeType":"105","messageId":"106","endLine":35,"endColumn":15},{"ruleId":"103","severity":1,"message":"126","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":20},{"ruleId":"103","severity":1,"message":"111","line":2,"column":22,"nodeType":"105","messageId":"106","endLine":2,"endColumn":28},{"ruleId":"103","severity":1,"message":"121","line":2,"column":30,"nodeType":"105","messageId":"106","endLine":2,"endColumn":37},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'order' is assigned a value but never used.","Identifier","unusedVar",["127"],["128"],["127"],["128"],"'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["129"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["130"],"'MenuItem' is defined but never used.","'Menu' is defined but never used.","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'setActiveStep' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.",["131"],"'test' is assigned a value but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"138","text":"139"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"140","text":"141"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"142","text":"143"},[1701,1703],"[checkoutToken.id]",[1962,1983],"[checkoutToken.id, shippingCountry, shippingSubdivision]",[1179,1185],"[activeStep, cart, history]"]